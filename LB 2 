{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "provenance": [],
      "authorship_tag": "ABX9TyNyv41WIOiuNII8V+48lGUf"
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "cells": [
    {
      "cell_type": "code",
      "execution_count": 2,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "akHicLajbkca",
        "outputId": "1510d9a8-ceb8-4852-9145-c2c1e8e509b0"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "=== Аналіз лог-файлу ===\n",
            "{'200': 3, '404': 1, '500': 1}\n",
            "\n",
            "=== Хеші файлів ===\n",
            "{'file1.txt': '7f114dae11f9256e2332ed9feaafa3f6605898a3e02c7622fa9f0b837223b78e', 'file2.txt': '8f2b80c573660ae85f65f02a39701584a149edc5a8049ced29f5ae6e37cd287b'}\n",
            "\n",
            "=== Фільтрація IP ===\n",
            "192.168.0.1 - 2\n",
            "10.0.0.1 - 1\n",
            "\n"
          ]
        }
      ],
      "source": [
        "import hashlib\n",
        "from collections import defaultdict\n",
        "\n",
        "# Завдання 1: Аналізатор лог-файлів\n",
        "def analyze_log_file(log_file_path):\n",
        "    result = defaultdict(int)\n",
        "    try:\n",
        "        with open(log_file_path, 'r') as file:\n",
        "            for line in file:\n",
        "                parts = line.strip().split()\n",
        "                if len(parts) >= 9:\n",
        "                    code = parts[-2]\n",
        "                    if code.isdigit():\n",
        "                        result[code] += 1\n",
        "        return dict(result)\n",
        "    except FileNotFoundError:\n",
        "        print(f\"Файл не знайдено: {log_file_path}\")\n",
        "    except IOError as e:\n",
        "        print(f\"Помилка читання файлу: {e}\")\n",
        "\n",
        "# Завдання 2: Генератор хешів файлів\n",
        "def generate_file_hashes(*file_paths):\n",
        "    result = {}\n",
        "    for path in file_paths:\n",
        "        try:\n",
        "            with open(path, 'rb') as f:\n",
        "                file_data = f.read()\n",
        "                sha256_hash = hashlib.sha256(file_data).hexdigest()\n",
        "                result[path] = sha256_hash\n",
        "        except FileNotFoundError:\n",
        "            print(f\"Файл не знайдено: {path}\")\n",
        "        except IOError as e:\n",
        "            print(f\"Помилка читання файлу {path}: {e}\")\n",
        "    return result\n",
        "\n",
        "# Завдання 3: Фільтрація IP-адрес\n",
        "def filter_ips(input_file_path, output_file_path, allowed_ips):\n",
        "    ip_counts = defaultdict(int)\n",
        "    try:\n",
        "        with open(input_file_path, 'r') as file:\n",
        "            for line in file:\n",
        "                parts = line.strip().split()\n",
        "                if parts:\n",
        "                    ip = parts[0]\n",
        "                    if ip in allowed_ips:\n",
        "                        ip_counts[ip] += 1\n",
        "        with open(output_file_path, 'w') as out_file:\n",
        "            for ip, count in ip_counts.items():\n",
        "                out_file.write(f\"{ip} - {count}\\n\")\n",
        "    except FileNotFoundError:\n",
        "        print(f\"Файл не знайдено: {input_file_path}\")\n",
        "    except IOError as e:\n",
        "        print(f\"Помилка запису до файлу: {e}\")\n",
        "\n",
        "# --- Створення тестових файлів ---\n",
        "\n",
        "# apache_logs.txt\n",
        "with open(\"apache_logs.txt\", \"w\") as f:\n",
        "    f.write(\n",
        "        \"192.168.0.1 - - [11/May/2025:10:00:00] \\\"GET /index.html HTTP/1.1\\\" 200 1043\\n\"\n",
        "        \"10.0.0.2 - - [11/May/2025:10:01:00] \\\"POST /login HTTP/1.1\\\" 404 523\\n\"\n",
        "        \"192.168.0.1 - - [11/May/2025:10:02:00] \\\"GET /home HTTP/1.1\\\" 200 850\\n\"\n",
        "        \"10.0.0.1 - - [11/May/2025:10:03:00] \\\"GET /about HTTP/1.1\\\" 500 104\\n\"\n",
        "        \"172.16.0.3 - - [11/May/2025:10:04:00] \\\"GET /contact HTTP/1.1\\\" 200 234\\n\"\n",
        "    )\n",
        "\n",
        "# file1.txt та file2.txt\n",
        "with open(\"file1.txt\", \"w\") as f:\n",
        "    f.write(\"Це перший файл для хешування.\")\n",
        "\n",
        "with open(\"file2.txt\", \"w\") as f:\n",
        "    f.write(\"Це другий файл для хешування.\")\n",
        "\n",
        "# --- Виклик функцій ---\n",
        "\n",
        "# Завдання 1\n",
        "print(\"=== Аналіз лог-файлу ===\")\n",
        "result1 = analyze_log_file(\"apache_logs.txt\")\n",
        "print(result1)\n",
        "\n",
        "# Завдання 2\n",
        "print(\"\\n=== Хеші файлів ===\")\n",
        "result2 = generate_file_hashes(\"file1.txt\", \"file2.txt\")\n",
        "print(result2)\n",
        "\n",
        "# Завдання 3\n",
        "print(\"\\n=== Фільтрація IP ===\")\n",
        "allowed_ips = [\"192.168.0.1\", \"10.0.0.1\"]\n",
        "filter_ips(\"apache_logs.txt\", \"filtered_ips.txt\", allowed_ips)\n",
        "\n",
        "# Виводимо результат фільтрації\n",
        "with open(\"filtered_ips.txt\", \"r\") as f:\n",
        "    print(f.read())\n",
        "\n"
      ]
    }
  ]
}